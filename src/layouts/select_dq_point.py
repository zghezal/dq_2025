from dash import html, dcc
import dash_bootstrap_components as dbc


def select_dq_point_page():
    """Page de s√©lection de la zone (raw/trusted/sandbox) - anciennement DQ Point."""
    return dbc.Container([
        html.H2("√âtape 3 ‚Äî Choisir la Zone"),
        html.P("S√©lectionnez la zone de donn√©es (ex: raw, trusted, sandbox)."),
        dcc.Dropdown(
            id="select-zone-dropdown", 
            options=[], 
            placeholder="Choisir une zone"
        ),
        dbc.Button("Aller au Builder", id="select-dq-next", color="primary", className="mt-3"),
        html.Div(id="select-dq-status", className="mt-2"),

        # Stores pour datasets, metrics, tests (requis par les callbacks globaux)
        dcc.Store(id="inventory-datasets-store", storage_type="session"),
        dcc.Store(id="store_datasets", storage_type="session"),
        dcc.Store(id="store_metrics", storage_type="session"),
        dcc.Store(id="store_tests", storage_type="session"),
        
        # √âl√©ments cach√©s requis par les callbacks globaux de build
        html.Div(id="ds-picker", style={"display": "none"}),
        html.Div(id="metrics-list", style={"display": "none"}),
        html.Div(id="tests-list", style={"display": "none"}),
        html.Div(id="save-datasets-status", style={"display": "none"}),

        # Affichage de la liste des datasets associ√©s √† la zone s√©lectionn√©e (aper√ßu uniquement)
        dbc.Card([
            dbc.CardHeader(html.H5("üì¶ Aper√ßu des datasets", className="mb-0")),
            dbc.CardBody([
                html.Div(id="datasets-status", className="text-muted", children="S√©lectionnez une zone pour voir les datasets disponibles"),
                html.Div(id="datasets-preview", className="mt-2")
            ])
        ], id="datasets-container", className="mt-4")
    ], fluid=True)
